@model Cshap_Mvc.Models.BlogModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="content p-3 blog-edit">
    <div class="card">
        @using (Html.BeginForm())
        {
            <div class="card-header">
                <h2>Edit Blogs</h2>
            </div>
            <div class="card-body">

                <div class="form-horizontal">
                    <div class="form-group py-2">
                        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2 m-1" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group py-2">
                        @Html.LabelFor(model => model.Short_Description, htmlAttributes: new { @class = "control-label col-md-2 m-1" })
                        <div class="col-md-12">
                            @Html.TextAreaFor(model => model.Short_Description, new { @class = "form-control", rows = "3" })
                            @Html.ValidationMessageFor(model => model.Short_Description, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group py-2">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2 m-1" })
                        <div class="col-md-12">
                            @Html.TextAreaFor(model => model.Description, new { @class = "form-control", rows = "6" })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group py-2">
                        @Html.LabelFor(model => model.Image_Url, htmlAttributes: new { @class = "control-label col-md-2 m-1" })
                        <div class="col-md-10">
                            <input class="form-control w-50" name="ImageUrl" id="inputEditFile" type="file">
                        </div>
                    </div>

                    <div class="form-group py-2 ">
                        @Html.LabelFor(model => model.Place, htmlAttributes: new { @class = "control-label col-md-2  m-1" })
                        <div class="row mx-2">
                            <div class="form-check col-md-2">
                                <input class="form-check-input" type="checkbox" value="" id="flexCheckDefault">
                                <label class="form-check-label" for="flexCheckDefault">
                                    Default checkbox
                                </label>
                            </div>
                            <div class="form-check col-md-2">
                                <input class="form-check-input" type="checkbox" value="" id="flexCheckChecked" checked>
                                <label class="form-check-label" for="flexCheckChecked">
                                    Checked checkbox
                                </label>
                            </div>
                        </div>
                    </div>

                    <div class="form-group py-2 ">
                        @Html.Label("Status","Public", htmlAttributes: new { @class = "control-label col-md-2 m-1" })
                        <div class="col-md-12 row mx-2">
                            <div class="form-check col-md-1">
                                @Html.RadioButtonFor(model => model.Status,true,new { @class = "form-check-input"})
                                @Html.Label("Public_Date", "Yes")
                            </div>
                            <div class="form-check col-md-1">
                                @Html.RadioButtonFor(model => model.Status, false,  new { @class = "form-check-input" })
                                @Html.Label("Public_Date", "No")
                            </div>
                        </div>
                        <div class="col-12">
                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group py-2 row">
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2  m-1" })
                            <div class="col-md-12 ">
                                @*@Html.DropDownList("Category", new SelectList(Model.listCategory, "Id", "Name", Model.Blog.Category_Id), new { @class = "form-control-novalidate with-30" })*@
                                <select class="form-select" id="StudentGender" name="StudentGender">
                                    <option>Select Gender</option>
                                    <option>Male</option>
                                    <option>Female</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Public_Date, htmlAttributes: new { @class = "control-label col-md-2  m-1" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.Public_Date, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Public_Date, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

            </div>
            <div class="card-footer text-center" >
                    <button class="btn btn-success c" type="submit">Submit</button>
                    <button class="btn btn-primary" type="button" > Clear</button>
            </div>
        }

    </div>

</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
